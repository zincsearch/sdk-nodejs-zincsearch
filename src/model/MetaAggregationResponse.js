/**
 * Zinc Search engine API
 * Zinc Search engine API documents https://docs.zincsearch.com
 *
 * The version of the OpenAPI document: 0.2.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetaAggregationResponse model module.
 * @module model/MetaAggregationResponse
 * @version 0.2.7
 */
class MetaAggregationResponse {
    /**
     * Constructs a new <code>MetaAggregationResponse</code>.
     * @alias module:model/MetaAggregationResponse
     */
    constructor() { 
        
        MetaAggregationResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetaAggregationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetaAggregationResponse} obj Optional instance to populate.
     * @return {module:model/MetaAggregationResponse} The populated <code>MetaAggregationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetaAggregationResponse();

            if (data.hasOwnProperty('buckets')) {
                obj['buckets'] = ApiClient.convertToType(data['buckets'], Object);
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
        }
        return obj;
    }


}

/**
 * slice or map
 * @member {Object} buckets
 */
MetaAggregationResponse.prototype['buckets'] = undefined;

/**
 * support for auto_date_histogram_aggregation
 * @member {String} interval
 */
MetaAggregationResponse.prototype['interval'] = undefined;

/**
 * @member {Object} value
 */
MetaAggregationResponse.prototype['value'] = undefined;






export default MetaAggregationResponse;

