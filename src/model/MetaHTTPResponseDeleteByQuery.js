/**
 * Zinc Search engine API
 * Zinc Search engine API documents https://docs.zincsearch.com
 *
 * The version of the OpenAPI document: 0.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetaHttpRetriesResponse from './MetaHttpRetriesResponse';

/**
 * The MetaHTTPResponseDeleteByQuery model module.
 * @module model/MetaHTTPResponseDeleteByQuery
 * @version 0.3.3
 */
class MetaHTTPResponseDeleteByQuery {
    /**
     * Constructs a new <code>MetaHTTPResponseDeleteByQuery</code>.
     * @alias module:model/MetaHTTPResponseDeleteByQuery
     */
    constructor() { 
        
        MetaHTTPResponseDeleteByQuery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetaHTTPResponseDeleteByQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetaHTTPResponseDeleteByQuery} obj Optional instance to populate.
     * @return {module:model/MetaHTTPResponseDeleteByQuery} The populated <code>MetaHTTPResponseDeleteByQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetaHTTPResponseDeleteByQuery();

            if (data.hasOwnProperty('batches')) {
                obj['batches'] = ApiClient.convertToType(data['batches'], 'Number');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Number');
            }
            if (data.hasOwnProperty('failures')) {
                obj['failures'] = ApiClient.convertToType(data['failures'], ['String']);
            }
            if (data.hasOwnProperty('noops')) {
                obj['noops'] = ApiClient.convertToType(data['noops'], 'Number');
            }
            if (data.hasOwnProperty('requests_per_second')) {
                obj['requests_per_second'] = ApiClient.convertToType(data['requests_per_second'], 'Number');
            }
            if (data.hasOwnProperty('retries')) {
                obj['retries'] = MetaHttpRetriesResponse.constructFromObject(data['retries']);
            }
            if (data.hasOwnProperty('throttled_millis')) {
                obj['throttled_millis'] = ApiClient.convertToType(data['throttled_millis'], 'Number');
            }
            if (data.hasOwnProperty('throttled_until_millis')) {
                obj['throttled_until_millis'] = ApiClient.convertToType(data['throttled_until_millis'], 'Number');
            }
            if (data.hasOwnProperty('time_out')) {
                obj['time_out'] = ApiClient.convertToType(data['time_out'], 'Boolean');
            }
            if (data.hasOwnProperty('took')) {
                obj['took'] = ApiClient.convertToType(data['took'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('version_conflicts')) {
                obj['version_conflicts'] = ApiClient.convertToType(data['version_conflicts'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} batches
 */
MetaHTTPResponseDeleteByQuery.prototype['batches'] = undefined;

/**
 * @member {Number} deleted
 */
MetaHTTPResponseDeleteByQuery.prototype['deleted'] = undefined;

/**
 * @member {Array.<String>} failures
 */
MetaHTTPResponseDeleteByQuery.prototype['failures'] = undefined;

/**
 * @member {Number} noops
 */
MetaHTTPResponseDeleteByQuery.prototype['noops'] = undefined;

/**
 * @member {Number} requests_per_second
 */
MetaHTTPResponseDeleteByQuery.prototype['requests_per_second'] = undefined;

/**
 * @member {module:model/MetaHttpRetriesResponse} retries
 */
MetaHTTPResponseDeleteByQuery.prototype['retries'] = undefined;

/**
 * @member {Number} throttled_millis
 */
MetaHTTPResponseDeleteByQuery.prototype['throttled_millis'] = undefined;

/**
 * @member {Number} throttled_until_millis
 */
MetaHTTPResponseDeleteByQuery.prototype['throttled_until_millis'] = undefined;

/**
 * @member {Boolean} time_out
 */
MetaHTTPResponseDeleteByQuery.prototype['time_out'] = undefined;

/**
 * @member {Number} took
 */
MetaHTTPResponseDeleteByQuery.prototype['took'] = undefined;

/**
 * @member {Number} total
 */
MetaHTTPResponseDeleteByQuery.prototype['total'] = undefined;

/**
 * @member {Number} version_conflicts
 */
MetaHTTPResponseDeleteByQuery.prototype['version_conflicts'] = undefined;






export default MetaHTTPResponseDeleteByQuery;

