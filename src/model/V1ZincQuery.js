/**
 * Zinc Search engine API
 * Zinc Search engine API documents https://docs.zincsearch.com
 *
 * The version of the OpenAPI document: 0.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetaHighlight from './MetaHighlight';
import V1AggregationParams from './V1AggregationParams';
import V1QueryParams from './V1QueryParams';

/**
 * The V1ZincQuery model module.
 * @module model/V1ZincQuery
 * @version 0.3.3
 */
class V1ZincQuery {
    /**
     * Constructs a new <code>V1ZincQuery</code>.
     * @alias module:model/V1ZincQuery
     */
    constructor() { 
        
        V1ZincQuery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1ZincQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1ZincQuery} obj Optional instance to populate.
     * @return {module:model/V1ZincQuery} The populated <code>V1ZincQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1ZincQuery();

            if (data.hasOwnProperty('_source')) {
                obj['_source'] = ApiClient.convertToType(data['_source'], ['String']);
            }
            if (data.hasOwnProperty('aggs')) {
                obj['aggs'] = ApiClient.convertToType(data['aggs'], {'String': V1AggregationParams});
            }
            if (data.hasOwnProperty('explain')) {
                obj['explain'] = ApiClient.convertToType(data['explain'], 'Boolean');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'Number');
            }
            if (data.hasOwnProperty('highlight')) {
                obj['highlight'] = MetaHighlight.constructFromObject(data['highlight']);
            }
            if (data.hasOwnProperty('max_results')) {
                obj['max_results'] = ApiClient.convertToType(data['max_results'], 'Number');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = V1QueryParams.constructFromObject(data['query']);
            }
            if (data.hasOwnProperty('search_type')) {
                obj['search_type'] = ApiClient.convertToType(data['search_type'], 'String');
            }
            if (data.hasOwnProperty('sort_fields')) {
                obj['sort_fields'] = ApiClient.convertToType(data['sort_fields'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} _source
 */
V1ZincQuery.prototype['_source'] = undefined;

/**
 * @member {Object.<String, module:model/V1AggregationParams>} aggs
 */
V1ZincQuery.prototype['aggs'] = undefined;

/**
 * @member {Boolean} explain
 */
V1ZincQuery.prototype['explain'] = undefined;

/**
 * @member {Number} from
 */
V1ZincQuery.prototype['from'] = undefined;

/**
 * @member {module:model/MetaHighlight} highlight
 */
V1ZincQuery.prototype['highlight'] = undefined;

/**
 * @member {Number} max_results
 */
V1ZincQuery.prototype['max_results'] = undefined;

/**
 * @member {module:model/V1QueryParams} query
 */
V1ZincQuery.prototype['query'] = undefined;

/**
 * SearchType is the type of search to perform. Can be match, match_phrase, query_string, etc
 * @member {String} search_type
 */
V1ZincQuery.prototype['search_type'] = undefined;

/**
 * @member {Array.<String>} sort_fields
 */
V1ZincQuery.prototype['sort_fields'] = undefined;






export default V1ZincQuery;

