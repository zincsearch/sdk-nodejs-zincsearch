/**
 * Zinc Search engine API
 * Zinc Search engine API documents https://docs.zincsearch.com
 *
 * The version of the OpenAPI document: 0.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ZincSearchSDK);
  }
}(this, function(expect, ZincSearchSDK) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ZincSearchSDK.Index();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Index', function() {
    describe('addOrRemoveESAlias', function() {
      it('should call addOrRemoveESAlias successfully', function(done) {
        //uncomment below and update the code to test addOrRemoveESAlias
        //instance.addOrRemoveESAlias(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyze', function() {
      it('should call analyze successfully', function(done) {
        //uncomment below and update the code to test analyze
        //instance.analyze(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyzeIndex', function() {
      it('should call analyzeIndex successfully', function(done) {
        //uncomment below and update the code to test analyzeIndex
        //instance.analyzeIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('delete', function() {
      it('should call delete successfully', function(done) {
        //uncomment below and update the code to test delete
        //instance.delete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('create', function() {
      it('should call create successfully', function(done) {
        //uncomment below and update the code to test create
        //instance.create(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTemplate', function() {
      it('should call createTemplate successfully', function(done) {
        //uncomment below and update the code to test createTemplate
        //instance.createTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTemplate', function() {
      it('should call deleteTemplate successfully', function(done) {
        //uncomment below and update the code to test deleteTemplate
        //instance.deleteTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eSCreateIndex', function() {
      it('should call eSCreateIndex successfully', function(done) {
        //uncomment below and update the code to test eSCreateIndex
        //instance.eSCreateIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eSGetMapping', function() {
      it('should call eSGetMapping successfully', function(done) {
        //uncomment below and update the code to test eSGetMapping
        //instance.eSGetMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('esExists', function() {
      it('should call esExists successfully', function(done) {
        //uncomment below and update the code to test esExists
        //instance.esExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exists', function() {
      it('should call exists successfully', function(done) {
        //uncomment below and update the code to test exists
        //instance.exists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getESAliases', function() {
      it('should call getESAliases successfully', function(done) {
        //uncomment below and update the code to test getESAliases
        //instance.getESAliases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIndex', function() {
      it('should call getIndex successfully', function(done) {
        //uncomment below and update the code to test getIndex
        //instance.getIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMapping', function() {
      it('should call getMapping successfully', function(done) {
        //uncomment below and update the code to test getMapping
        //instance.getMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSettings', function() {
      it('should call getSettings successfully', function(done) {
        //uncomment below and update the code to test getSettings
        //instance.getSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemplate', function() {
      it('should call getTemplate successfully', function(done) {
        //uncomment below and update the code to test getTemplate
        //instance.getTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('indexNameList', function() {
      it('should call indexNameList successfully', function(done) {
        //uncomment below and update the code to test indexNameList
        //instance.indexNameList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('list', function() {
      it('should call list successfully', function(done) {
        //uncomment below and update the code to test list
        //instance.list(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTemplates', function() {
      it('should call listTemplates successfully', function(done) {
        //uncomment below and update the code to test listTemplates
        //instance.listTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('refresh', function() {
      it('should call refresh successfully', function(done) {
        //uncomment below and update the code to test refresh
        //instance.refresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setMapping', function() {
      it('should call setMapping successfully', function(done) {
        //uncomment below and update the code to test setMapping
        //instance.setMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setSettings', function() {
      it('should call setSettings successfully', function(done) {
        //uncomment below and update the code to test setSettings
        //instance.setSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTemplate', function() {
      it('should call updateTemplate successfully', function(done) {
        //uncomment below and update the code to test updateTemplate
        //instance.updateTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
